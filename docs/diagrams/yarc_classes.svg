<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1922px" preserveAspectRatio="none" style="width:1794px;height:1922px;background:#FFFFFF;" version="1.1" viewBox="0 0 1794 1922" width="1794px" zoomAndPan="magnify"><defs/><g><!--MD5=[825c40fabb8c89cfa81a92fafc08ac4d]
cluster yarc.compiler.handlers.handler--><g id="cluster_yarc.compiler.handlers.handler"><path d="M579.5,557 L798.5,557 A3.75,3.75 0 0 1 801,559.5 L808,580.6094 L1168.5,580.6094 A2.5,2.5 0 0 1 1171,583.1094 L1171,1529 A2.5,2.5 0 0 1 1168.5,1531.5 L579.5,1531.5 A2.5,2.5 0 0 1 577,1529 L577,559.5 A2.5,2.5 0 0 1 579.5,557 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="577" x2="808" y1="580.6094" y2="580.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="218" x="581" y="573.5332">yarc.compiler.handlers.handler</text></g><!--MD5=[d31322c255da6599007ed529cc26e154]
cluster yarc.compiler.handlers.handler_factory--><g id="cluster_yarc.compiler.handlers.handler_factory"><path d="M1197.5,856.5 L1472.5,856.5 A3.75,3.75 0 0 1 1475,859 L1482,880.1094 L1784.5,880.1094 A2.5,2.5 0 0 1 1787,882.6094 L1787,1007 A2.5,2.5 0 0 1 1784.5,1009.5 L1197.5,1009.5 A2.5,2.5 0 0 1 1195,1007 L1195,859 A2.5,2.5 0 0 1 1197.5,856.5 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="1195" x2="1482" y1="880.1094" y2="880.1094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="274" x="1199" y="873.0332">yarc.compiler.handlers.handler_factory</text></g><!--MD5=[1acacec25b00d7cf1786fc1c9d5cb3fd]
cluster yarc.compiler.handlers.replicator_handler--><g id="cluster_yarc.compiler.handlers.replicator_handler"><path d="M1197.5,1317 L1492.5,1317 A3.75,3.75 0 0 1 1495,1319.5 L1502,1340.6094 L1782.5,1340.6094 A2.5,2.5 0 0 1 1785,1343.1094 L1785,1590.5 A2.5,2.5 0 0 1 1782.5,1593 L1197.5,1593 A2.5,2.5 0 0 1 1195,1590.5 L1195,1319.5 A2.5,2.5 0 0 1 1197.5,1317 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="1195" x2="1502" y1="1340.6094" y2="1340.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="294" x="1199" y="1333.5332">yarc.compiler.handlers.replicator_handler</text></g><!--MD5=[af281b9b4041b290e3622681c947cf11]
cluster yarc.compiler.handlers.utils.symbol_stack--><g id="cluster_yarc.compiler.handlers.utils.symbol_stack"><path d="M249.5,6 L542.5,6 A3.75,3.75 0 0 1 545,8.5 L552,29.6094 L622.5,29.6094 A2.5,2.5 0 0 1 625,32.1094 L625,530.5 A2.5,2.5 0 0 1 622.5,533 L249.5,533 A2.5,2.5 0 0 1 247,530.5 L247,8.5 A2.5,2.5 0 0 1 249.5,6 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="247" x2="552" y1="29.6094" y2="29.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="292" x="251" y="22.5332">yarc.compiler.handlers.utils.symbol_stack</text></g><!--MD5=[90be05eab3b698d1a627b82f59366330]
cluster yarc.compiler.handlers.formatters.warning_formatter--><g id="cluster_yarc.compiler.handlers.formatters.warning_formatter"><path d="M651.5,193 L1022.5,193 A3.75,3.75 0 0 1 1025,195.5 L1032,216.6094 L1096.5,216.6094 A2.5,2.5 0 0 1 1099,219.1094 L1099,504 A2.5,2.5 0 0 1 1096.5,506.5 L651.5,506.5 A2.5,2.5 0 0 1 649,504 L649,195.5 A2.5,2.5 0 0 1 651.5,193 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="649" x2="1032" y1="216.6094" y2="216.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="370" x="653" y="209.5332">yarc.compiler.handlers.formatters.warning_formatter</text></g><!--MD5=[442ccd72172007f151532010aa9a66e1]
cluster yarc.compiler.handlers.formatters.error_formatter--><g id="cluster_yarc.compiler.handlers.formatters.error_formatter"><path d="M1125.5,175.5 L1476.5,175.5 A3.75,3.75 0 0 1 1479,178 L1486,199.1094 L1502.5,199.1094 A2.5,2.5 0 0 1 1505,201.6094 L1505,513 A2.5,2.5 0 0 1 1502.5,515.5 L1125.5,515.5 A2.5,2.5 0 0 1 1123,513 L1123,178 A2.5,2.5 0 0 1 1125.5,175.5 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="1123" x2="1486" y1="199.1094" y2="199.1094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="350" x="1127" y="192.0332">yarc.compiler.handlers.formatters.error_formatter</text></g><!--MD5=[a3652446341a5aeec28dd9880259bf0e]
cluster yarc.compiler.handlers.exceptions--><g id="cluster_yarc.compiler.handlers.exceptions"><path d="M1187.5,15 L1430.5,15 A3.75,3.75 0 0 1 1433,17.5 L1440,38.6094 L1440.5,38.6094 A2.5,2.5 0 0 1 1443,41.1094 L1443,147.5 A2.5,2.5 0 0 1 1440.5,150 L1187.5,150 A2.5,2.5 0 0 1 1185,147.5 L1185,17.5 A2.5,2.5 0 0 1 1187.5,15 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="1185" x2="1440" y1="38.6094" y2="38.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="242" x="1189" y="31.5332">yarc.compiler.handlers.exceptions</text></g><!--MD5=[39a2d37796eb247d3510f43462a47a8c]
cluster yarc.compiler--><g id="cluster_yarc.compiler"><path d="M8.5,742 L103.5,742 A3.75,3.75 0 0 1 106,744.5 L113,765.6094 L550.5,765.6094 A2.5,2.5 0 0 1 553,768.1094 L553,1912.5 A2.5,2.5 0 0 1 550.5,1915 L8.5,1915 A2.5,2.5 0 0 1 6,1912.5 L6,744.5 A2.5,2.5 0 0 1 8.5,742 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="113" y1="765.6094" y2="765.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="94" x="10" y="758.5332">yarc.compiler</text></g><!--MD5=[7e67a0320d92990fe328633b645fbb1a]
class yarc.compiler.handlers.handler.Handler--><g id="elem_yarc.compiler.handlers.handler.Handler"><rect codeLine="4" fill="#FAEBD7" height="699.5469" id="yarc.compiler.handlers.handler.Handler" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="561" x="593.5" y="593"/><ellipse cx="845.25" cy="609" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M848.0156,604.875 Q848.1719,604.6563 848.3594,604.5469 Q848.5469,604.4375 848.7656,604.4375 Q849.1406,604.4375 849.375,604.7031 Q849.6094,604.9531 849.6094,605.5625 L849.6094,607.0156 Q849.6094,607.625 849.375,607.8906 Q849.1406,608.1563 848.7656,608.1563 Q848.4219,608.1563 848.2188,607.9531 Q848.0156,607.7656 847.9063,607.25 Q847.8594,606.8906 847.6719,606.7031 Q847.3438,606.3281 846.7344,606.1094 Q846.125,605.8906 845.5,605.8906 Q844.7344,605.8906 844.0938,606.2188 Q843.4688,606.5469 842.9688,607.2969 Q842.4844,608.0469 842.4844,609.0781 L842.4844,610.1719 Q842.4844,611.4063 843.375,612.2344 Q844.2656,613.0469 845.8594,613.0469 Q846.7969,613.0469 847.4531,612.7969 Q847.8438,612.6406 848.2656,612.2031 Q848.5313,611.9375 848.6719,611.8594 Q848.8281,611.7813 849.0313,611.7813 Q849.3594,611.7813 849.6094,612.0469 Q849.875,612.2969 849.875,612.6406 Q849.875,612.9844 849.5313,613.3906 Q849.0313,613.9688 848.2344,614.2969 Q847.1563,614.75 845.8594,614.75 Q844.3438,614.75 843.1406,614.125 Q842.1563,613.625 841.4688,612.5625 Q840.7813,611.4844 840.7813,610.2031 L840.7813,609.0469 Q840.7813,607.7188 841.3906,606.5781 Q842.0156,605.4219 843.1094,604.8125 Q844.2031,604.1875 845.4375,604.1875 Q846.1719,604.1875 846.8125,604.3594 Q847.4688,604.5156 848.0156,604.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="49" x="865.75" y="614.7285">Handler</text><line style="stroke:#181818;stroke-width:0.5;" x1="594.5" x2="1153.5" y1="625" y2="625"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="599.5" y="643.5332">BEHAVIOR : str</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="599.5" y="661.1426">default_settings : dict</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="599.5" y="678.752">error_dict : dict[str, str]</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="599.5" y="696.3613">error_formatter</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="263" x="599.5" y="713.9707">forward_references : list[tuple[str, Token]]</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="599.5" y="731.5801">overwritten_settings : set</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="599.5" y="749.1895">parser : Parser</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="599.5" y="766.7988">settings : dict[str, str]</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="599.5" y="784.4082">should_lookup : bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="599.5" y="802.0176">show_warnings : bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="599.5" y="819.627">symbol_stack</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="599.5" y="837.2363">warning_dict : dict[str, str]</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="599.5" y="854.8457">warning_formatter</text><line style="stroke:#181818;stroke-width:0.5;" x1="594.5" x2="1153.5" y1="861.9219" y2="861.9219"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="302" x="599.5" y="880.4551">add_setting(setting: Token, value: Any) -&gt; None</text><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="209" x="599.5" y="898.0645">check_target(tk: Token) -&gt; None</text><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="382" x="599.5" y="915.6738">check_writer(writer: Token, params: list[Parameter]) -&gt; None</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="179" x="599.5" y="933.2832">define(vars: list[str]) -&gt; None</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="599.5" y="950.8926">disable_lookup() -&gt; None</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="599.5" y="968.502">enable_lookup() -&gt; None</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="218" x="599.5" y="986.1113">expand_string(s: Token | str) -&gt; str</text><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="381" x="599.5" y="1003.7207">get_attrs(token: Token, attrs: list[Attribute] | None) -&gt; list[str]</text><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="321" x="599.5" y="1021.3301">get_behaviors(attrs: list[Attribute] | None) -&gt; list[str]</text><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="549" x="599.5" y="1038.9395">get_params(token: Token, attrs: list[Attribute] | None, warnings: bool) -&gt; list[Parameter]</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="599.5" y="1056.5488">get_random_uid() -&gt; str</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="492" x="599.5" y="1074.1582">handle_error(type: ErrorType, msg: Optional[str], tk: Optional[Token]) -&gt; None</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="412" x="599.5" y="1091.7676">handle_warning(type: WarningType, tk: Optional[Token]) -&gt; None</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="187" x="599.5" y="1109.377">is_frame(type: Token) -&gt; bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="235" x="599.5" y="1126.9863">is_overwritten(setting: Token) -&gt; bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="260" x="599.5" y="1144.5957">is_special_setting(setting: Token) -&gt; bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="278" x="599.5" y="1162.2051">lookup(var: str, tk: Optional[Token]) -&gt; None</text><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="74" x="599.5" y="1179.8145">map() -&gt; str</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="261" x="599.5" y="1197.4238">parse_setting_id(setting_id: Token) -&gt; str</text><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="232" x="599.5" y="1215.0332">parse_snippet(snippet: Token) -&gt; str</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="599.5" y="1232.6426">pop_stack() -&gt; None</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="599.5" y="1250.252">push_stack() -&gt; None</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="599.5" y="1267.8613">settings_to_str(indent: int) -&gt; str</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="437" x="599.5" y="1285.4707">special_setting_to_str(setting: Token | str, value: Any) -&gt; Optional[str]</text></g><!--MD5=[2b553dcdf216f50ad7e6688c814e23b1]
class yarc.compiler.handlers.handler.Attribute--><g id="elem_yarc.compiler.handlers.handler.Attribute"><rect codeLine="48" fill="#FAEBD7" height="100.8281" id="yarc.compiler.handlers.handler.Attribute" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="85" x="767.5" y="1414.5"/><ellipse cx="782.5" cy="1430.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M785.2656,1426.375 Q785.4219,1426.1563 785.6094,1426.0469 Q785.7969,1425.9375 786.0156,1425.9375 Q786.3906,1425.9375 786.625,1426.2031 Q786.8594,1426.4531 786.8594,1427.0625 L786.8594,1428.5156 Q786.8594,1429.125 786.625,1429.3906 Q786.3906,1429.6563 786.0156,1429.6563 Q785.6719,1429.6563 785.4688,1429.4531 Q785.2656,1429.2656 785.1563,1428.75 Q785.1094,1428.3906 784.9219,1428.2031 Q784.5938,1427.8281 783.9844,1427.6094 Q783.375,1427.3906 782.75,1427.3906 Q781.9844,1427.3906 781.3438,1427.7188 Q780.7188,1428.0469 780.2188,1428.7969 Q779.7344,1429.5469 779.7344,1430.5781 L779.7344,1431.6719 Q779.7344,1432.9063 780.625,1433.7344 Q781.5156,1434.5469 783.1094,1434.5469 Q784.0469,1434.5469 784.7031,1434.2969 Q785.0938,1434.1406 785.5156,1433.7031 Q785.7813,1433.4375 785.9219,1433.3594 Q786.0781,1433.2813 786.2813,1433.2813 Q786.6094,1433.2813 786.8594,1433.5469 Q787.125,1433.7969 787.125,1434.1406 Q787.125,1434.4844 786.7813,1434.8906 Q786.2813,1435.4688 785.4844,1435.7969 Q784.4063,1436.25 783.1094,1436.25 Q781.5938,1436.25 780.3906,1435.625 Q779.4063,1435.125 778.7188,1434.0625 Q778.0313,1432.9844 778.0313,1431.7031 L778.0313,1430.5469 Q778.0313,1429.2188 778.6406,1428.0781 Q779.2656,1426.9219 780.3594,1426.3125 Q781.4531,1425.6875 782.6875,1425.6875 Q783.4219,1425.6875 784.0625,1425.8594 Q784.7188,1426.0156 785.2656,1426.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="53" x="796.5" y="1436.2285">Attribute</text><line style="stroke:#181818;stroke-width:0.5;" x1="768.5" x2="851.5" y1="1446.5" y2="1446.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="773.5" y="1465.0332">name : str</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="39" x="773.5" y="1482.6426">st : str</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="34" x="773.5" y="1500.252">value</text><line style="stroke:#181818;stroke-width:0.5;" x1="768.5" x2="851.5" y1="1507.3281" y2="1507.3281"/></g><!--MD5=[a28f0d76167173abad5b49e16d9fa271]
class yarc.compiler.handlers.handler.Parameter--><g id="elem_yarc.compiler.handlers.handler.Parameter"><rect codeLine="53" fill="#FAEBD7" height="83.2188" id="yarc.compiler.handlers.handler.Parameter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="98" x="888" y="1423.5"/><ellipse cx="903" cy="1439.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M905.7656,1435.375 Q905.9219,1435.1563 906.1094,1435.0469 Q906.2969,1434.9375 906.5156,1434.9375 Q906.8906,1434.9375 907.125,1435.2031 Q907.3594,1435.4531 907.3594,1436.0625 L907.3594,1437.5156 Q907.3594,1438.125 907.125,1438.3906 Q906.8906,1438.6563 906.5156,1438.6563 Q906.1719,1438.6563 905.9688,1438.4531 Q905.7656,1438.2656 905.6563,1437.75 Q905.6094,1437.3906 905.4219,1437.2031 Q905.0938,1436.8281 904.4844,1436.6094 Q903.875,1436.3906 903.25,1436.3906 Q902.4844,1436.3906 901.8438,1436.7188 Q901.2188,1437.0469 900.7188,1437.7969 Q900.2344,1438.5469 900.2344,1439.5781 L900.2344,1440.6719 Q900.2344,1441.9063 901.125,1442.7344 Q902.0156,1443.5469 903.6094,1443.5469 Q904.5469,1443.5469 905.2031,1443.2969 Q905.5938,1443.1406 906.0156,1442.7031 Q906.2813,1442.4375 906.4219,1442.3594 Q906.5781,1442.2813 906.7813,1442.2813 Q907.1094,1442.2813 907.3594,1442.5469 Q907.625,1442.7969 907.625,1443.1406 Q907.625,1443.4844 907.2813,1443.8906 Q906.7813,1444.4688 905.9844,1444.7969 Q904.9063,1445.25 903.6094,1445.25 Q902.0938,1445.25 900.8906,1444.625 Q899.9063,1444.125 899.2188,1443.0625 Q898.5313,1441.9844 898.5313,1440.7031 L898.5313,1439.5469 Q898.5313,1438.2188 899.1406,1437.0781 Q899.7656,1435.9219 900.8594,1435.3125 Q901.9531,1434.6875 903.1875,1434.6875 Q903.9219,1434.6875 904.5625,1434.8594 Q905.2188,1435.0156 905.7656,1435.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="917" y="1445.2285">Parameter</text><line style="stroke:#181818;stroke-width:0.5;" x1="889" x2="985" y1="1455.5" y2="1455.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="894" y="1474.0332">name : str</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="34" x="894" y="1491.6426">value</text><line style="stroke:#181818;stroke-width:0.5;" x1="889" x2="985" y1="1498.7188" y2="1498.7188"/></g><!--MD5=[adbba53b7a2fe51b2d9c893b054c2853]
class yarc.compiler.handlers.handler_factory.HandlerFactory--><g id="elem_yarc.compiler.handlers.handler_factory.HandlerFactory"><rect codeLine="43" fill="#FAEBD7" height="100.8281" id="yarc.compiler.handlers.handler_factory.HandlerFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="560" x="1211" y="892.5"/><ellipse cx="1438.25" cy="908.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1441.0156,904.375 Q1441.1719,904.1563 1441.3594,904.0469 Q1441.5469,903.9375 1441.7656,903.9375 Q1442.1406,903.9375 1442.375,904.2031 Q1442.6094,904.4531 1442.6094,905.0625 L1442.6094,906.5156 Q1442.6094,907.125 1442.375,907.3906 Q1442.1406,907.6563 1441.7656,907.6563 Q1441.4219,907.6563 1441.2188,907.4531 Q1441.0156,907.2656 1440.9063,906.75 Q1440.8594,906.3906 1440.6719,906.2031 Q1440.3438,905.8281 1439.7344,905.6094 Q1439.125,905.3906 1438.5,905.3906 Q1437.7344,905.3906 1437.0938,905.7188 Q1436.4688,906.0469 1435.9688,906.7969 Q1435.4844,907.5469 1435.4844,908.5781 L1435.4844,909.6719 Q1435.4844,910.9063 1436.375,911.7344 Q1437.2656,912.5469 1438.8594,912.5469 Q1439.7969,912.5469 1440.4531,912.2969 Q1440.8438,912.1406 1441.2656,911.7031 Q1441.5313,911.4375 1441.6719,911.3594 Q1441.8281,911.2813 1442.0313,911.2813 Q1442.3594,911.2813 1442.6094,911.5469 Q1442.875,911.7969 1442.875,912.1406 Q1442.875,912.4844 1442.5313,912.8906 Q1442.0313,913.4688 1441.2344,913.7969 Q1440.1563,914.25 1438.8594,914.25 Q1437.3438,914.25 1436.1406,913.625 Q1435.1563,913.125 1434.4688,912.0625 Q1433.7813,910.9844 1433.7813,909.7031 L1433.7813,908.5469 Q1433.7813,907.2188 1434.3906,906.0781 Q1435.0156,904.9219 1436.1094,904.3125 Q1437.2031,903.6875 1438.4375,903.6875 Q1439.1719,903.6875 1439.8125,903.8594 Q1440.4688,904.0156 1441.0156,904.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="1458.75" y="914.2285">HandlerFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="1212" x2="1770" y1="924.5" y2="924.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="348" x="1217" y="943.0332">supported_libraries : dict[str, tuple[type[Handler], Path]]</text><line style="stroke:#181818;stroke-width:0.5;" x1="1212" x2="1770" y1="950.1094" y2="950.1094"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="548" x="1217" y="968.6426">get_handler(parser: Parser, lib: str, handler_kwargs: Optional[dict[str, Any]]) -&gt; Handler</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="1217" y="986.252">is_library_supported(lib)</text></g><!--MD5=[dc39fd343bf8481d8c9708b59e081896]
class yarc.compiler.handlers.replicator_handler.OmniReplicatorHandler--><g id="elem_yarc.compiler.handlers.replicator_handler.OmniReplicatorHandler"><rect codeLine="57" fill="#FAEBD7" height="224.0938" id="yarc.compiler.handlers.replicator_handler.OmniReplicatorHandler" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="557" x="1211.5" y="1353"/><ellipse cx="1412.75" cy="1369" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1415.5156,1364.875 Q1415.6719,1364.6563 1415.8594,1364.5469 Q1416.0469,1364.4375 1416.2656,1364.4375 Q1416.6406,1364.4375 1416.875,1364.7031 Q1417.1094,1364.9531 1417.1094,1365.5625 L1417.1094,1367.0156 Q1417.1094,1367.625 1416.875,1367.8906 Q1416.6406,1368.1563 1416.2656,1368.1563 Q1415.9219,1368.1563 1415.7188,1367.9531 Q1415.5156,1367.7656 1415.4063,1367.25 Q1415.3594,1366.8906 1415.1719,1366.7031 Q1414.8438,1366.3281 1414.2344,1366.1094 Q1413.625,1365.8906 1413,1365.8906 Q1412.2344,1365.8906 1411.5938,1366.2188 Q1410.9688,1366.5469 1410.4688,1367.2969 Q1409.9844,1368.0469 1409.9844,1369.0781 L1409.9844,1370.1719 Q1409.9844,1371.4063 1410.875,1372.2344 Q1411.7656,1373.0469 1413.3594,1373.0469 Q1414.2969,1373.0469 1414.9531,1372.7969 Q1415.3438,1372.6406 1415.7656,1372.2031 Q1416.0313,1371.9375 1416.1719,1371.8594 Q1416.3281,1371.7813 1416.5313,1371.7813 Q1416.8594,1371.7813 1417.1094,1372.0469 Q1417.375,1372.2969 1417.375,1372.6406 Q1417.375,1372.9844 1417.0313,1373.3906 Q1416.5313,1373.9688 1415.7344,1374.2969 Q1414.6563,1374.75 1413.3594,1374.75 Q1411.8438,1374.75 1410.6406,1374.125 Q1409.6563,1373.625 1408.9688,1372.5625 Q1408.2813,1371.4844 1408.2813,1370.2031 L1408.2813,1369.0469 Q1408.2813,1367.7188 1408.8906,1366.5781 Q1409.5156,1365.4219 1410.6094,1364.8125 Q1411.7031,1364.1875 1412.9375,1364.1875 Q1413.6719,1364.1875 1414.3125,1364.3594 Q1414.9688,1364.5156 1415.5156,1364.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="1433.25" y="1374.7285">OmniReplicatorHandler</text><line style="stroke:#181818;stroke-width:0.5;" x1="1212.5" x2="1767.5" y1="1385" y2="1385"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="1217.5" y="1403.5332">carb_mapping : dict</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="1217.5" y="1421.1426">mapping</text><line style="stroke:#181818;stroke-width:0.5;" x1="1212.5" x2="1767.5" y1="1428.2188" y2="1428.2188"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="205" x="1217.5" y="1446.752">check_target(tk: Token) -&gt; None</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="379" x="1217.5" y="1464.3613">check_writer(writer: Token, params: list[Parameter]) -&gt; None</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="377" x="1217.5" y="1481.9707">get_attrs(token: Token, attrs: list[Attribute] | None) -&gt; list[str]</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="320" x="1217.5" y="1499.5801">get_behaviors(attrs: list[Attribute] | None) -&gt; list[str]</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="545" x="1217.5" y="1517.1895">get_params(token: Token, attrs: list[Attribute] | None, warnings: bool) -&gt; list[Parameter]</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="1217.5" y="1534.7988">map() -&gt; str</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="231" x="1217.5" y="1552.4082">parse_snippet(snippet: Token) -&gt; str</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="437" x="1217.5" y="1570.0176">special_setting_to_str(setting: Token | str, value: Any) -&gt; Optional[str]</text></g><!--MD5=[a321ed2d4937f68e3ae070a58f0a84bd]
class yarc.compiler.handlers.utils.symbol_stack.SymbolStack--><g id="elem_yarc.compiler.handlers.utils.symbol_stack.SymbolStack"><rect codeLine="69" fill="#FAEBD7" height="136.0469" id="yarc.compiler.handlers.utils.symbol_stack.SymbolStack" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="346" x="263" y="381"/><ellipse cx="391.25" cy="397" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M394.0156,392.875 Q394.1719,392.6563 394.3594,392.5469 Q394.5469,392.4375 394.7656,392.4375 Q395.1406,392.4375 395.375,392.7031 Q395.6094,392.9531 395.6094,393.5625 L395.6094,395.0156 Q395.6094,395.625 395.375,395.8906 Q395.1406,396.1563 394.7656,396.1563 Q394.4219,396.1563 394.2188,395.9531 Q394.0156,395.7656 393.9063,395.25 Q393.8594,394.8906 393.6719,394.7031 Q393.3438,394.3281 392.7344,394.1094 Q392.125,393.8906 391.5,393.8906 Q390.7344,393.8906 390.0938,394.2188 Q389.4688,394.5469 388.9688,395.2969 Q388.4844,396.0469 388.4844,397.0781 L388.4844,398.1719 Q388.4844,399.4063 389.375,400.2344 Q390.2656,401.0469 391.8594,401.0469 Q392.7969,401.0469 393.4531,400.7969 Q393.8438,400.6406 394.2656,400.2031 Q394.5313,399.9375 394.6719,399.8594 Q394.8281,399.7813 395.0313,399.7813 Q395.3594,399.7813 395.6094,400.0469 Q395.875,400.2969 395.875,400.6406 Q395.875,400.9844 395.5313,401.3906 Q395.0313,401.9688 394.2344,402.2969 Q393.1563,402.75 391.8594,402.75 Q390.3438,402.75 389.1406,402.125 Q388.1563,401.625 387.4688,400.5625 Q386.7813,399.4844 386.7813,398.2031 L386.7813,397.0469 Q386.7813,395.7188 387.3906,394.5781 Q388.0156,393.4219 389.1094,392.8125 Q390.2031,392.1875 391.4375,392.1875 Q392.1719,392.1875 392.8125,392.3594 Q393.4688,392.5156 394.0156,392.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="411.75" y="402.7285">SymbolStack</text><line style="stroke:#181818;stroke-width:0.5;" x1="264" x2="608" y1="413" y2="413"/><line style="stroke:#181818;stroke-width:0.5;" x1="264" x2="608" y1="421" y2="421"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="334" x="269" y="439.5332">define(name: str, var_type: type, used: bool) -&gt; None</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="245" x="269" y="457.1426">lookup(name: str) -&gt; Optional[Variable]</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="269" y="474.752">pop() -&gt; SymbolTable</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="269" y="492.3613">push() -&gt; None</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="269" y="509.9707">top() -&gt; SymbolTable</text></g><!--MD5=[3cab0ddf76da9b45bce0f1b45b616527]
class yarc.compiler.handlers.utils.symbol_stack.SymbolTable--><g id="elem_yarc.compiler.handlers.utils.symbol_stack.SymbolTable"><rect codeLine="76" fill="#FAEBD7" height="118.4375" id="yarc.compiler.handlers.utils.symbol_stack.SymbolTable" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="346" x="263" y="203"/><ellipse cx="390.75" cy="219" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M393.5156,214.875 Q393.6719,214.6563 393.8594,214.5469 Q394.0469,214.4375 394.2656,214.4375 Q394.6406,214.4375 394.875,214.7031 Q395.1094,214.9531 395.1094,215.5625 L395.1094,217.0156 Q395.1094,217.625 394.875,217.8906 Q394.6406,218.1563 394.2656,218.1563 Q393.9219,218.1563 393.7188,217.9531 Q393.5156,217.7656 393.4063,217.25 Q393.3594,216.8906 393.1719,216.7031 Q392.8438,216.3281 392.2344,216.1094 Q391.625,215.8906 391,215.8906 Q390.2344,215.8906 389.5938,216.2188 Q388.9688,216.5469 388.4688,217.2969 Q387.9844,218.0469 387.9844,219.0781 L387.9844,220.1719 Q387.9844,221.4063 388.875,222.2344 Q389.7656,223.0469 391.3594,223.0469 Q392.2969,223.0469 392.9531,222.7969 Q393.3438,222.6406 393.7656,222.2031 Q394.0313,221.9375 394.1719,221.8594 Q394.3281,221.7813 394.5313,221.7813 Q394.8594,221.7813 395.1094,222.0469 Q395.375,222.2969 395.375,222.6406 Q395.375,222.9844 395.0313,223.3906 Q394.5313,223.9688 393.7344,224.2969 Q392.6563,224.75 391.3594,224.75 Q389.8438,224.75 388.6406,224.125 Q387.6563,223.625 386.9688,222.5625 Q386.2813,221.4844 386.2813,220.2031 L386.2813,219.0469 Q386.2813,217.7188 386.8906,216.5781 Q387.5156,215.4219 388.6094,214.8125 Q389.7031,214.1875 390.9375,214.1875 Q391.6719,214.1875 392.3125,214.3594 Q392.9688,214.5156 393.5156,214.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="411.25" y="224.7285">SymbolTable</text><line style="stroke:#181818;stroke-width:0.5;" x1="264" x2="608" y1="235" y2="235"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="269" y="253.5332">parent : Optional['SymbolTable']</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="51" x="269" y="271.1426">symbols</text><line style="stroke:#181818;stroke-width:0.5;" x1="264" x2="608" y1="278.2188" y2="278.2188"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="334" x="269" y="296.752">define(name: str, var_type: type, used: bool) -&gt; None</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="245" x="269" y="314.3613">lookup(name: str) -&gt; Optional[Variable]</text></g><!--MD5=[bca829f175c8de4a0e0ce94cfd9394e5]
class yarc.compiler.handlers.utils.symbol_stack.Variable--><g id="elem_yarc.compiler.handlers.utils.symbol_stack.Variable"><rect codeLine="82" fill="#FAEBD7" height="100.8281" id="yarc.compiler.handlers.utils.symbol_stack.Variable" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="86" x="393" y="42"/><ellipse cx="408.9" cy="58" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M411.6656,53.875 Q411.8219,53.6563 412.0094,53.5469 Q412.1969,53.4375 412.4156,53.4375 Q412.7906,53.4375 413.025,53.7031 Q413.2594,53.9531 413.2594,54.5625 L413.2594,56.0156 Q413.2594,56.625 413.025,56.8906 Q412.7906,57.1563 412.4156,57.1563 Q412.0719,57.1563 411.8688,56.9531 Q411.6656,56.7656 411.5563,56.25 Q411.5094,55.8906 411.3219,55.7031 Q410.9938,55.3281 410.3844,55.1094 Q409.775,54.8906 409.15,54.8906 Q408.3844,54.8906 407.7438,55.2188 Q407.1188,55.5469 406.6188,56.2969 Q406.1344,57.0469 406.1344,58.0781 L406.1344,59.1719 Q406.1344,60.4063 407.025,61.2344 Q407.9156,62.0469 409.5094,62.0469 Q410.4469,62.0469 411.1031,61.7969 Q411.4938,61.6406 411.9156,61.2031 Q412.1813,60.9375 412.3219,60.8594 Q412.4781,60.7813 412.6813,60.7813 Q413.0094,60.7813 413.2594,61.0469 Q413.525,61.2969 413.525,61.6406 Q413.525,61.9844 413.1813,62.3906 Q412.6813,62.9688 411.8844,63.2969 Q410.8063,63.75 409.5094,63.75 Q407.9938,63.75 406.7906,63.125 Q405.8063,62.625 405.1188,61.5625 Q404.4313,60.4844 404.4313,59.2031 L404.4313,58.0469 Q404.4313,56.7188 405.0406,55.5781 Q405.6656,54.4219 406.7594,53.8125 Q407.8531,53.1875 409.0875,53.1875 Q409.8219,53.1875 410.4625,53.3594 Q411.1188,53.5156 411.6656,53.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="423.1" y="63.7285">Variable</text><line style="stroke:#181818;stroke-width:0.5;" x1="394" x2="478" y1="74" y2="74"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="399" y="92.5332">name : str</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="399" y="110.1426">type_ : type</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="399" y="127.752">used : bool</text><line style="stroke:#181818;stroke-width:0.5;" x1="394" x2="478" y1="134.8281" y2="134.8281"/></g><!--MD5=[5187658f57b1b12b2524aacf824923f6]
class yarc.compiler.handlers.formatters.warning_formatter.WarningFormatter--><g id="elem_yarc.compiler.handlers.formatters.warning_formatter.WarningFormatter"><rect codeLine="87" fill="#FAEBD7" height="83.2188" id="yarc.compiler.handlers.formatters.warning_formatter.WarningFormatter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="417" x="665.5" y="407.5"/><ellipse cx="812.25" cy="423.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M815.0156,419.375 Q815.1719,419.1563 815.3594,419.0469 Q815.5469,418.9375 815.7656,418.9375 Q816.1406,418.9375 816.375,419.2031 Q816.6094,419.4531 816.6094,420.0625 L816.6094,421.5156 Q816.6094,422.125 816.375,422.3906 Q816.1406,422.6563 815.7656,422.6563 Q815.4219,422.6563 815.2188,422.4531 Q815.0156,422.2656 814.9063,421.75 Q814.8594,421.3906 814.6719,421.2031 Q814.3438,420.8281 813.7344,420.6094 Q813.125,420.3906 812.5,420.3906 Q811.7344,420.3906 811.0938,420.7188 Q810.4688,421.0469 809.9688,421.7969 Q809.4844,422.5469 809.4844,423.5781 L809.4844,424.6719 Q809.4844,425.9063 810.375,426.7344 Q811.2656,427.5469 812.8594,427.5469 Q813.7969,427.5469 814.4531,427.2969 Q814.8438,427.1406 815.2656,426.7031 Q815.5313,426.4375 815.6719,426.3594 Q815.8281,426.2813 816.0313,426.2813 Q816.3594,426.2813 816.6094,426.5469 Q816.875,426.7969 816.875,427.1406 Q816.875,427.4844 816.5313,427.8906 Q816.0313,428.4688 815.2344,428.7969 Q814.1563,429.25 812.8594,429.25 Q811.3438,429.25 810.1406,428.625 Q809.1563,428.125 808.4688,427.0625 Q807.7813,425.9844 807.7813,424.7031 L807.7813,423.5469 Q807.7813,422.2188 808.3906,421.0781 Q809.0156,419.9219 810.1094,419.3125 Q811.2031,418.6875 812.4375,418.6875 Q813.1719,418.6875 813.8125,418.8594 Q814.4688,419.0156 815.0156,419.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="832.75" y="429.2285">WarningFormatter</text><line style="stroke:#181818;stroke-width:0.5;" x1="666.5" x2="1081.5" y1="439.5" y2="439.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="666.5" x2="1081.5" y1="447.5" y2="447.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="405" x="671.5" y="466.0332">closest_suggestion(name: str, accepted: set[str]) -&gt; Optional[str]</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="309" x="671.5" y="483.6426">get_warning_message(type: WarningType) -&gt; str</text></g><!--MD5=[a6bf00f456173d5efde53efcdf81b2e1]
class yarc.compiler.handlers.formatters.warning_formatter.WarningType--><g id="elem_yarc.compiler.handlers.formatters.warning_formatter.WarningType"><rect codeLine="91" fill="#FAEBD7" height="65.6094" id="yarc.compiler.handlers.formatters.warning_formatter.WarningType" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="117" x="815.5" y="229"/><ellipse cx="830.5" cy="245" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M833.2656,240.875 Q833.4219,240.6563 833.6094,240.5469 Q833.7969,240.4375 834.0156,240.4375 Q834.3906,240.4375 834.625,240.7031 Q834.8594,240.9531 834.8594,241.5625 L834.8594,243.0156 Q834.8594,243.625 834.625,243.8906 Q834.3906,244.1563 834.0156,244.1563 Q833.6719,244.1563 833.4688,243.9531 Q833.2656,243.7656 833.1563,243.25 Q833.1094,242.8906 832.9219,242.7031 Q832.5938,242.3281 831.9844,242.1094 Q831.375,241.8906 830.75,241.8906 Q829.9844,241.8906 829.3438,242.2188 Q828.7188,242.5469 828.2188,243.2969 Q827.7344,244.0469 827.7344,245.0781 L827.7344,246.1719 Q827.7344,247.4063 828.625,248.2344 Q829.5156,249.0469 831.1094,249.0469 Q832.0469,249.0469 832.7031,248.7969 Q833.0938,248.6406 833.5156,248.2031 Q833.7813,247.9375 833.9219,247.8594 Q834.0781,247.7813 834.2813,247.7813 Q834.6094,247.7813 834.8594,248.0469 Q835.125,248.2969 835.125,248.6406 Q835.125,248.9844 834.7813,249.3906 Q834.2813,249.9688 833.4844,250.2969 Q832.4063,250.75 831.1094,250.75 Q829.5938,250.75 828.3906,250.125 Q827.4063,249.625 826.7188,248.5625 Q826.0313,247.4844 826.0313,246.2031 L826.0313,245.0469 Q826.0313,243.7188 826.6406,242.5781 Q827.2656,241.4219 828.3594,240.8125 Q829.4531,240.1875 830.6875,240.1875 Q831.4219,240.1875 832.0625,240.3594 Q832.7188,240.5156 833.2656,240.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="844.5" y="250.7285">WarningType</text><line style="stroke:#181818;stroke-width:0.5;" x1="816.5" x2="931.5" y1="261" y2="261"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="35" x="821.5" y="279.5332">name</text><line style="stroke:#181818;stroke-width:0.5;" x1="816.5" x2="931.5" y1="286.6094" y2="286.6094"/></g><!--MD5=[eefa0a9fdaa5e40d1880e5eb99e260f2]
class yarc.compiler.handlers.formatters.error_formatter.ErrorFormatter--><g id="elem_yarc.compiler.handlers.formatters.error_formatter.ErrorFormatter"><rect codeLine="94" fill="#FAEBD7" height="100.8281" id="yarc.compiler.handlers.formatters.error_formatter.ErrorFormatter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="350" x="1139" y="398.5"/><ellipse cx="1262.75" cy="414.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1265.5156,410.375 Q1265.6719,410.1563 1265.8594,410.0469 Q1266.0469,409.9375 1266.2656,409.9375 Q1266.6406,409.9375 1266.875,410.2031 Q1267.1094,410.4531 1267.1094,411.0625 L1267.1094,412.5156 Q1267.1094,413.125 1266.875,413.3906 Q1266.6406,413.6563 1266.2656,413.6563 Q1265.9219,413.6563 1265.7188,413.4531 Q1265.5156,413.2656 1265.4063,412.75 Q1265.3594,412.3906 1265.1719,412.2031 Q1264.8438,411.8281 1264.2344,411.6094 Q1263.625,411.3906 1263,411.3906 Q1262.2344,411.3906 1261.5938,411.7188 Q1260.9688,412.0469 1260.4688,412.7969 Q1259.9844,413.5469 1259.9844,414.5781 L1259.9844,415.6719 Q1259.9844,416.9063 1260.875,417.7344 Q1261.7656,418.5469 1263.3594,418.5469 Q1264.2969,418.5469 1264.9531,418.2969 Q1265.3438,418.1406 1265.7656,417.7031 Q1266.0313,417.4375 1266.1719,417.3594 Q1266.3281,417.2813 1266.5313,417.2813 Q1266.8594,417.2813 1267.1094,417.5469 Q1267.375,417.7969 1267.375,418.1406 Q1267.375,418.4844 1267.0313,418.8906 Q1266.5313,419.4688 1265.7344,419.7969 Q1264.6563,420.25 1263.3594,420.25 Q1261.8438,420.25 1260.6406,419.625 Q1259.6563,419.125 1258.9688,418.0625 Q1258.2813,416.9844 1258.2813,415.7031 L1258.2813,414.5469 Q1258.2813,413.2188 1258.8906,412.0781 Q1259.5156,410.9219 1260.6094,410.3125 Q1261.7031,409.6875 1262.9375,409.6875 Q1263.6719,409.6875 1264.3125,409.8594 Q1264.9688,410.0156 1265.5156,410.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="1283.25" y="420.2285">ErrorFormatter</text><line style="stroke:#181818;stroke-width:0.5;" x1="1140" x2="1488" y1="430.5" y2="430.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="1145" y="449.0332">input : ANTLRStringStream</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="1145" y="466.6426">strdata : list[str]</text><line style="stroke:#181818;stroke-width:0.5;" x1="1140" x2="1488" y1="473.7188" y2="473.7188"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="338" x="1145" y="492.252">format(tk: Token, msg: str, show_anchors: bool) -&gt; str</text></g><!--MD5=[4c1623912abee312a5350ee60f96ab8c]
class yarc.compiler.handlers.formatters.error_formatter.ErrorType--><g id="elem_yarc.compiler.handlers.formatters.error_formatter.ErrorType"><rect codeLine="99" fill="#FAEBD7" height="100.8281" id="yarc.compiler.handlers.formatters.error_formatter.ErrorType" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="96" x="1266" y="211.5"/><ellipse cx="1281" cy="227.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1283.7656,223.375 Q1283.9219,223.1563 1284.1094,223.0469 Q1284.2969,222.9375 1284.5156,222.9375 Q1284.8906,222.9375 1285.125,223.2031 Q1285.3594,223.4531 1285.3594,224.0625 L1285.3594,225.5156 Q1285.3594,226.125 1285.125,226.3906 Q1284.8906,226.6563 1284.5156,226.6563 Q1284.1719,226.6563 1283.9688,226.4531 Q1283.7656,226.2656 1283.6563,225.75 Q1283.6094,225.3906 1283.4219,225.2031 Q1283.0938,224.8281 1282.4844,224.6094 Q1281.875,224.3906 1281.25,224.3906 Q1280.4844,224.3906 1279.8438,224.7188 Q1279.2188,225.0469 1278.7188,225.7969 Q1278.2344,226.5469 1278.2344,227.5781 L1278.2344,228.6719 Q1278.2344,229.9063 1279.125,230.7344 Q1280.0156,231.5469 1281.6094,231.5469 Q1282.5469,231.5469 1283.2031,231.2969 Q1283.5938,231.1406 1284.0156,230.7031 Q1284.2813,230.4375 1284.4219,230.3594 Q1284.5781,230.2813 1284.7813,230.2813 Q1285.1094,230.2813 1285.3594,230.5469 Q1285.625,230.7969 1285.625,231.1406 Q1285.625,231.4844 1285.2813,231.8906 Q1284.7813,232.4688 1283.9844,232.7969 Q1282.9063,233.25 1281.6094,233.25 Q1280.0938,233.25 1278.8906,232.625 Q1277.9063,232.125 1277.2188,231.0625 Q1276.5313,229.9844 1276.5313,228.7031 L1276.5313,227.5469 Q1276.5313,226.2188 1277.1406,225.0781 Q1277.7656,223.9219 1278.8594,223.3125 Q1279.9531,222.6875 1281.1875,222.6875 Q1281.9219,222.6875 1282.5625,222.8594 Q1283.2188,223.0156 1283.7656,223.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="1295" y="233.2285">ErrorType</text><line style="stroke:#181818;stroke-width:0.5;" x1="1267" x2="1361" y1="243.5" y2="243.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="77" x="1272" y="262.0332">default_msg</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="35" x="1272" y="279.6426">name</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="27" x="1272" y="297.252">type</text><line style="stroke:#181818;stroke-width:0.5;" x1="1267" x2="1361" y1="304.3281" y2="304.3281"/></g><!--MD5=[bd25a674db2be71e6a57330d599d6a46]
class yarc.compiler.handlers.exceptions.YARCException--><g id="elem_yarc.compiler.handlers.exceptions.YARCException"><rect codeLine="104" fill="#FAEBD7" height="83.2188" id="yarc.compiler.handlers.exceptions.YARCException" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="146" x="1241" y="51"/><ellipse cx="1262.75" cy="67" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1265.5156,62.875 Q1265.6719,62.6563 1265.8594,62.5469 Q1266.0469,62.4375 1266.2656,62.4375 Q1266.6406,62.4375 1266.875,62.7031 Q1267.1094,62.9531 1267.1094,63.5625 L1267.1094,65.0156 Q1267.1094,65.625 1266.875,65.8906 Q1266.6406,66.1563 1266.2656,66.1563 Q1265.9219,66.1563 1265.7188,65.9531 Q1265.5156,65.7656 1265.4063,65.25 Q1265.3594,64.8906 1265.1719,64.7031 Q1264.8438,64.3281 1264.2344,64.1094 Q1263.625,63.8906 1263,63.8906 Q1262.2344,63.8906 1261.5938,64.2188 Q1260.9688,64.5469 1260.4688,65.2969 Q1259.9844,66.0469 1259.9844,67.0781 L1259.9844,68.1719 Q1259.9844,69.4063 1260.875,70.2344 Q1261.7656,71.0469 1263.3594,71.0469 Q1264.2969,71.0469 1264.9531,70.7969 Q1265.3438,70.6406 1265.7656,70.2031 Q1266.0313,69.9375 1266.1719,69.8594 Q1266.3281,69.7813 1266.5313,69.7813 Q1266.8594,69.7813 1267.1094,70.0469 Q1267.375,70.2969 1267.375,70.6406 Q1267.375,70.9844 1267.0313,71.3906 Q1266.5313,71.9688 1265.7344,72.2969 Q1264.6563,72.75 1263.3594,72.75 Q1261.8438,72.75 1260.6406,72.125 Q1259.6563,71.625 1258.9688,70.5625 Q1258.2813,69.4844 1258.2813,68.2031 L1258.2813,67.0469 Q1258.2813,65.7188 1258.8906,64.5781 Q1259.5156,63.4219 1260.6094,62.8125 Q1261.7031,62.1875 1262.9375,62.1875 Q1263.6719,62.1875 1264.3125,62.3594 Q1264.9688,62.5156 1265.5156,62.875 Z " fill="#000000"/><text fill="#FF0000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="1278.25" y="72.7285">YARCException</text><line style="stroke:#181818;stroke-width:0.5;" x1="1242" x2="1386" y1="83" y2="83"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="1247" y="101.5332">error_type</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="1247" y="119.1426">message : NoneType</text><line style="stroke:#181818;stroke-width:0.5;" x1="1242" x2="1386" y1="126.2188" y2="126.2188"/></g><!--MD5=[4cbf6a8241c990dd1b0844699baa7254]
class yarc.compiler.YarcLexerBase--><g id="elem_yarc.compiler.YarcLexerBase"><rect codeLine="109" fill="#FAEBD7" height="329.75" id="yarc.compiler.YarcLexerBase" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="344" x="22" y="778"/><ellipse cx="141.75" cy="794" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M144.5156,789.875 Q144.6719,789.6563 144.8594,789.5469 Q145.0469,789.4375 145.2656,789.4375 Q145.6406,789.4375 145.875,789.7031 Q146.1094,789.9531 146.1094,790.5625 L146.1094,792.0156 Q146.1094,792.625 145.875,792.8906 Q145.6406,793.1563 145.2656,793.1563 Q144.9219,793.1563 144.7188,792.9531 Q144.5156,792.7656 144.4063,792.25 Q144.3594,791.8906 144.1719,791.7031 Q143.8438,791.3281 143.2344,791.1094 Q142.625,790.8906 142,790.8906 Q141.2344,790.8906 140.5938,791.2188 Q139.9688,791.5469 139.4688,792.2969 Q138.9844,793.0469 138.9844,794.0781 L138.9844,795.1719 Q138.9844,796.4063 139.875,797.2344 Q140.7656,798.0469 142.3594,798.0469 Q143.2969,798.0469 143.9531,797.7969 Q144.3438,797.6406 144.7656,797.2031 Q145.0313,796.9375 145.1719,796.8594 Q145.3281,796.7813 145.5313,796.7813 Q145.8594,796.7813 146.1094,797.0469 Q146.375,797.2969 146.375,797.6406 Q146.375,797.9844 146.0313,798.3906 Q145.5313,798.9688 144.7344,799.2969 Q143.6563,799.75 142.3594,799.75 Q140.8438,799.75 139.6406,799.125 Q138.6563,798.625 137.9688,797.5625 Q137.2813,796.4844 137.2813,795.2031 L137.2813,794.0469 Q137.2813,792.7188 137.8906,791.5781 Q138.5156,790.4219 139.6094,789.8125 Q140.7031,789.1875 141.9375,789.1875 Q142.6719,789.1875 143.3125,789.3594 Q143.9688,789.5156 144.5156,789.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="162.25" y="799.7285">YarcLexerBase</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="365" y1="810" y2="810"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="28" y="828.5332">NEW_LINE_PATTERN</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="28" y="846.1426">SPACES_PATTERN</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="28" y="863.752">indents : list[int], list</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="28" y="881.3613">opened : int</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="28" y="898.9707">tokens : list, list[Token]</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="365" y1="906.0469" y2="906.0469"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="28" y="924.5801">atStartOfInput()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="28" y="942.1895">closeBrace()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="332" x="28" y="959.7988">commonToken(type_: int, text: str) -&gt; CommonToken</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="28" y="977.4082">createDedent()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="241" x="28" y="995.0176">emit(token: Optional[Token]) -&gt; Token</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="28" y="1012.627">emitToken(token: Token) -&gt; None</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="268" x="28" y="1030.2363">getIndentationCount(whitespace: str) -&gt; int</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="28" y="1047.8457">nextToken()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="28" y="1065.4551">onNewLine()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="28" y="1083.0645">openBrace()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="42" x="28" y="1100.6738">reset()</text></g><!--MD5=[4e63f92077c98418678e265da68eea25]
class yarc.compiler.YarcLexer--><g id="elem_yarc.compiler.YarcLexer"><rect codeLine="127" fill="#FAEBD7" height="48" id="yarc.compiler.YarcLexer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="96" x="22" y="1441"/><ellipse cx="37" cy="1457" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M39.7656,1452.875 Q39.9219,1452.6563 40.1094,1452.5469 Q40.2969,1452.4375 40.5156,1452.4375 Q40.8906,1452.4375 41.125,1452.7031 Q41.3594,1452.9531 41.3594,1453.5625 L41.3594,1455.0156 Q41.3594,1455.625 41.125,1455.8906 Q40.8906,1456.1563 40.5156,1456.1563 Q40.1719,1456.1563 39.9688,1455.9531 Q39.7656,1455.7656 39.6563,1455.25 Q39.6094,1454.8906 39.4219,1454.7031 Q39.0938,1454.3281 38.4844,1454.1094 Q37.875,1453.8906 37.25,1453.8906 Q36.4844,1453.8906 35.8438,1454.2188 Q35.2188,1454.5469 34.7188,1455.2969 Q34.2344,1456.0469 34.2344,1457.0781 L34.2344,1458.1719 Q34.2344,1459.4063 35.125,1460.2344 Q36.0156,1461.0469 37.6094,1461.0469 Q38.5469,1461.0469 39.2031,1460.7969 Q39.5938,1460.6406 40.0156,1460.2031 Q40.2813,1459.9375 40.4219,1459.8594 Q40.5781,1459.7813 40.7813,1459.7813 Q41.1094,1459.7813 41.3594,1460.0469 Q41.625,1460.2969 41.625,1460.6406 Q41.625,1460.9844 41.2813,1461.3906 Q40.7813,1461.9688 39.9844,1462.2969 Q38.9063,1462.75 37.6094,1462.75 Q36.0938,1462.75 34.8906,1462.125 Q33.9063,1461.625 33.2188,1460.5625 Q32.5313,1459.4844 32.5313,1458.2031 L32.5313,1457.0469 Q32.5313,1455.7188 33.1406,1454.5781 Q33.7656,1453.4219 34.8594,1452.8125 Q35.9531,1452.1875 37.1875,1452.1875 Q37.9219,1452.1875 38.5625,1452.3594 Q39.2188,1452.5156 39.7656,1452.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="51" y="1462.7285">YarcLexer</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="117" y1="1473" y2="1473"/><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="117" y1="1481" y2="1481"/></g><!--MD5=[b5ca2a272cbcbfd2272171c996b48ad1]
class yarc.compiler.YarcParserBase--><g id="elem_yarc.compiler.YarcParserBase"><rect codeLine="129" fill="#FAEBD7" height="100.8281" id="yarc.compiler.YarcParserBase" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="383" x="153.5" y="1414.5"/><ellipse cx="289.25" cy="1430.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M292.0156,1426.375 Q292.1719,1426.1563 292.3594,1426.0469 Q292.5469,1425.9375 292.7656,1425.9375 Q293.1406,1425.9375 293.375,1426.2031 Q293.6094,1426.4531 293.6094,1427.0625 L293.6094,1428.5156 Q293.6094,1429.125 293.375,1429.3906 Q293.1406,1429.6563 292.7656,1429.6563 Q292.4219,1429.6563 292.2188,1429.4531 Q292.0156,1429.2656 291.9063,1428.75 Q291.8594,1428.3906 291.6719,1428.2031 Q291.3438,1427.8281 290.7344,1427.6094 Q290.125,1427.3906 289.5,1427.3906 Q288.7344,1427.3906 288.0938,1427.7188 Q287.4688,1428.0469 286.9688,1428.7969 Q286.4844,1429.5469 286.4844,1430.5781 L286.4844,1431.6719 Q286.4844,1432.9063 287.375,1433.7344 Q288.2656,1434.5469 289.8594,1434.5469 Q290.7969,1434.5469 291.4531,1434.2969 Q291.8438,1434.1406 292.2656,1433.7031 Q292.5313,1433.4375 292.6719,1433.3594 Q292.8281,1433.2813 293.0313,1433.2813 Q293.3594,1433.2813 293.6094,1433.5469 Q293.875,1433.7969 293.875,1434.1406 Q293.875,1434.4844 293.5313,1434.8906 Q293.0313,1435.4688 292.2344,1435.7969 Q291.1563,1436.25 289.8594,1436.25 Q288.3438,1436.25 287.1406,1435.625 Q286.1563,1435.125 285.4688,1434.0625 Q284.7813,1432.9844 284.7813,1431.7031 L284.7813,1430.5469 Q284.7813,1429.2188 285.3906,1428.0781 Q286.0156,1426.9219 287.1094,1426.3125 Q288.2031,1425.6875 289.4375,1425.6875 Q290.1719,1425.6875 290.8125,1425.8594 Q291.4688,1426.0156 292.0156,1426.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="309.75" y="1436.2285">YarcParserBase</text><line style="stroke:#181818;stroke-width:0.5;" x1="154.5" x2="535.5" y1="1446.5" y2="1446.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="48" x="159.5" y="1465.0332">handler</text><line style="stroke:#181818;stroke-width:0.5;" x1="154.5" x2="535.5" y1="1472.1094" y2="1472.1094"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="159.5" y="1490.6426">displayRecognitionError(e)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="371" x="159.5" y="1508.252">set_handler(lib: str, handler_kwargs: dict[str, Any]) -&gt; None</text></g><!--MD5=[d14b42968d544a54e114827b801646cd]
class yarc.compiler.YarcParser--><g id="elem_yarc.compiler.YarcParser"><rect codeLine="134" fill="#FAEBD7" height="48" id="yarc.compiler.YarcParser" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="103" x="164.5" y="1637"/><ellipse cx="179.5" cy="1653" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M182.2656,1648.875 Q182.4219,1648.6563 182.6094,1648.5469 Q182.7969,1648.4375 183.0156,1648.4375 Q183.3906,1648.4375 183.625,1648.7031 Q183.8594,1648.9531 183.8594,1649.5625 L183.8594,1651.0156 Q183.8594,1651.625 183.625,1651.8906 Q183.3906,1652.1563 183.0156,1652.1563 Q182.6719,1652.1563 182.4688,1651.9531 Q182.2656,1651.7656 182.1563,1651.25 Q182.1094,1650.8906 181.9219,1650.7031 Q181.5938,1650.3281 180.9844,1650.1094 Q180.375,1649.8906 179.75,1649.8906 Q178.9844,1649.8906 178.3438,1650.2188 Q177.7188,1650.5469 177.2188,1651.2969 Q176.7344,1652.0469 176.7344,1653.0781 L176.7344,1654.1719 Q176.7344,1655.4063 177.625,1656.2344 Q178.5156,1657.0469 180.1094,1657.0469 Q181.0469,1657.0469 181.7031,1656.7969 Q182.0938,1656.6406 182.5156,1656.2031 Q182.7813,1655.9375 182.9219,1655.8594 Q183.0781,1655.7813 183.2813,1655.7813 Q183.6094,1655.7813 183.8594,1656.0469 Q184.125,1656.2969 184.125,1656.6406 Q184.125,1656.9844 183.7813,1657.3906 Q183.2813,1657.9688 182.4844,1658.2969 Q181.4063,1658.75 180.1094,1658.75 Q178.5938,1658.75 177.3906,1658.125 Q176.4063,1657.625 175.7188,1656.5625 Q175.0313,1655.4844 175.0313,1654.2031 L175.0313,1653.0469 Q175.0313,1651.7188 175.6406,1650.5781 Q176.2656,1649.4219 177.3594,1648.8125 Q178.4531,1648.1875 179.6875,1648.1875 Q180.4219,1648.1875 181.0625,1648.3594 Q181.7188,1648.5156 182.2656,1648.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="193.5" y="1658.7285">YarcParser</text><line style="stroke:#181818;stroke-width:0.5;" x1="165.5" x2="266.5" y1="1669" y2="1669"/><line style="stroke:#181818;stroke-width:0.5;" x1="165.5" x2="266.5" y1="1677" y2="1677"/></g><!--MD5=[40689c5974771df7360dcf1f3a151bb3]
class yarc.compiler.YarcCompiler--><g id="elem_yarc.compiler.YarcCompiler"><rect codeLine="136" fill="#FAEBD7" height="153.6563" id="yarc.compiler.YarcCompiler" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="130" x="151" y="1745"/><ellipse cx="171.85" cy="1761" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M174.6156,1756.875 Q174.7719,1756.6563 174.9594,1756.5469 Q175.1469,1756.4375 175.3656,1756.4375 Q175.7406,1756.4375 175.975,1756.7031 Q176.2094,1756.9531 176.2094,1757.5625 L176.2094,1759.0156 Q176.2094,1759.625 175.975,1759.8906 Q175.7406,1760.1563 175.3656,1760.1563 Q175.0219,1760.1563 174.8188,1759.9531 Q174.6156,1759.7656 174.5063,1759.25 Q174.4594,1758.8906 174.2719,1758.7031 Q173.9438,1758.3281 173.3344,1758.1094 Q172.725,1757.8906 172.1,1757.8906 Q171.3344,1757.8906 170.6938,1758.2188 Q170.0688,1758.5469 169.5688,1759.2969 Q169.0844,1760.0469 169.0844,1761.0781 L169.0844,1762.1719 Q169.0844,1763.4063 169.975,1764.2344 Q170.8656,1765.0469 172.4594,1765.0469 Q173.3969,1765.0469 174.0531,1764.7969 Q174.4438,1764.6406 174.8656,1764.2031 Q175.1313,1763.9375 175.2719,1763.8594 Q175.4281,1763.7813 175.6313,1763.7813 Q175.9594,1763.7813 176.2094,1764.0469 Q176.475,1764.2969 176.475,1764.6406 Q176.475,1764.9844 176.1313,1765.3906 Q175.6313,1765.9688 174.8344,1766.2969 Q173.7563,1766.75 172.4594,1766.75 Q170.9438,1766.75 169.7406,1766.125 Q168.7563,1765.625 168.0688,1764.5625 Q167.3813,1763.4844 167.3813,1762.2031 L167.3813,1761.0469 Q167.3813,1759.7188 167.9906,1758.5781 Q168.6156,1757.4219 169.7094,1756.8125 Q170.8031,1756.1875 172.0375,1756.1875 Q172.7719,1756.1875 173.4125,1756.3594 Q174.0688,1756.5156 174.6156,1756.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="187.15" y="1766.7285">YarcCompiler</text><line style="stroke:#181818;stroke-width:0.5;" x1="152" x2="280" y1="1777" y2="1777"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="38" x="157" y="1795.5332">errors</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="118" x="157" y="1813.1426">handler_args : dict</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="157" y="1830.752">lib : Optional[str]</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="41" x="157" y="1848.3613">parser</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="157" y="1865.9707">warnings</text><line style="stroke:#181818;stroke-width:0.5;" x1="152" x2="280" y1="1873.0469" y2="1873.0469"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="157" y="1891.5801">compile() -&gt; str</text></g><!--MD5=[aa605f6affc41a4060893f144a370987]
reverse link yarc.compiler.YarcLexerBase to yarc.compiler.YarcLexer--><g id="link_yarc.compiler.YarcLexerBase_yarc.compiler.YarcLexer"><path codeLine="145" d="M70,1128.16 C70,1128.16 70,1440.61 70,1440.61 " fill="none" id="yarc.compiler.YarcLexerBase-backto-yarc.compiler.YarcLexer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="63,1128.16,70,1108.16,77,1128.16,63,1128.16" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[89e5e11948188256d3baaafb3796eb69]
reverse link yarc.compiler.YarcParserBase to yarc.compiler.YarcParser--><g id="link_yarc.compiler.YarcParserBase_yarc.compiler.YarcParser"><path codeLine="146" d="M216,1535.73 C216,1535.73 216,1636.95 216,1636.95 " fill="none" id="yarc.compiler.YarcParserBase-backto-yarc.compiler.YarcParser" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="209,1535.73,216,1515.73,223,1535.73,209,1535.73" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[80b8504b238f79c80272ffc6cde1ed89]
link yarc.compiler.YarcLexer to yarc.compiler.YarcParser--><g id="link_yarc.compiler.YarcLexer_yarc.compiler.YarcParser"><path codeLine="147" d="M70,1489.03 C70,1541.37 70,1661 70,1661 C70,1661 151.11,1661 151.11,1661 " fill="none" id="yarc.compiler.YarcLexer-to-yarc.compiler.YarcParser" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="164.11,1661,158.11,1657,152.11,1661,158.11,1665,164.11,1661" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="28" x="41" y="1612.0651">input</text></g><!--MD5=[e81cc4c4163fecd727f7fd48b795c84e]
link yarc.compiler.YarcParser to yarc.compiler.YarcCompiler--><g id="link_yarc.compiler.YarcParser_yarc.compiler.YarcCompiler"><path codeLine="148" d="M216,1685.1 C216,1685.1 216,1731.95 216,1731.95 " fill="none" id="yarc.compiler.YarcParser-to-yarc.compiler.YarcCompiler" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="216,1744.95,220,1738.95,216,1732.95,212,1738.95,216,1744.95" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="36" x="179" y="1705.0251">parser</text></g><!--MD5=[0c329aee7d6d34a4a21e8a35c2c34e83]
reverse link yarc.compiler.handlers.utils.symbol_stack.SymbolTable to yarc.compiler.handlers.utils.symbol_stack.SymbolStack--><g id="link_yarc.compiler.handlers.utils.symbol_stack.SymbolTable_yarc.compiler.handlers.utils.symbol_stack.SymbolStack"><path codeLine="150" d="M436,326.17 C436,326.17 436,380.76 436,380.76 " fill="none" id="yarc.compiler.handlers.utils.symbol_stack.SymbolTable-backto-yarc.compiler.handlers.utils.symbol_stack.SymbolStack" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="436,321.17,432,330.17,436,326.17,440,330.17,436,321.17" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[9349c6e65fc549f91e25a5873c4b71ec]
reverse link yarc.compiler.handlers.utils.symbol_stack.Variable to yarc.compiler.handlers.utils.symbol_stack.SymbolTable--><g id="link_yarc.compiler.handlers.utils.symbol_stack.Variable_yarc.compiler.handlers.utils.symbol_stack.SymbolTable"><path codeLine="151" d="M436,148.36 C436,148.36 436,202.84 436,202.84 " fill="none" id="yarc.compiler.handlers.utils.symbol_stack.Variable-backto-yarc.compiler.handlers.utils.symbol_stack.SymbolTable" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="436,143.36,432,152.36,436,148.36,440,152.36,436,143.36" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[37cae501b3fadbf9614386ebd6fc2eaf]
reverse link yarc.compiler.handlers.exceptions.YARCException to yarc.compiler.handlers.formatters.error_formatter.ErrorType--><g id="link_yarc.compiler.handlers.exceptions.YARCException_yarc.compiler.handlers.formatters.error_formatter.ErrorType"><path codeLine="152" d="M1314,147.4 C1314,147.4 1314,211.22 1314,211.22 " fill="none" id="yarc.compiler.handlers.exceptions.YARCException-backto-yarc.compiler.handlers.formatters.error_formatter.ErrorType" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1314,134.4,1310,140.4,1314,146.4,1318,140.4,1314,134.4" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="58" x="1255" y="175.8051">error_type</text></g><!--MD5=[e53489c7611fdf8cc40b1c4254759c8b]
reverse link yarc.compiler.handlers.formatters.warning_formatter.WarningType to yarc.compiler.handlers.formatters.warning_formatter.WarningFormatter--><g id="link_yarc.compiler.handlers.formatters.warning_formatter.WarningType_yarc.compiler.handlers.formatters.warning_formatter.WarningFormatter"><path codeLine="154" d="M874,300 C874,300 874,407.5 874,407.5 " fill="none" id="yarc.compiler.handlers.formatters.warning_formatter.WarningType-backto-yarc.compiler.handlers.formatters.warning_formatter.WarningFormatter" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="874,295,870,304,874,300,878,304,874,295" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[1dafa2596eb8402b5f52837f73e8ebad]
reverse link yarc.compiler.handlers.formatters.error_formatter.ErrorType to yarc.compiler.handlers.formatters.error_formatter.ErrorFormatter--><g id="link_yarc.compiler.handlers.formatters.error_formatter.ErrorType_yarc.compiler.handlers.formatters.error_formatter.ErrorFormatter"><path codeLine="155" d="M1314,317.6 C1314,317.6 1314,398.35 1314,398.35 " fill="none" id="yarc.compiler.handlers.formatters.error_formatter.ErrorType-backto-yarc.compiler.handlers.formatters.error_formatter.ErrorFormatter" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1314,312.6,1310,321.6,1314,317.6,1318,321.6,1314,312.6" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[4b1a78e61f30e4c7a02c251a5c200fb6]
link yarc.compiler.handlers.handler.Handler to yarc.compiler.handlers.handler.Attribute--><g id="link_yarc.compiler.handlers.handler.Handler_yarc.compiler.handlers.handler.Attribute"><path codeLine="157" d="M810,1293.35 C810,1293.35 810,1409.35 810,1409.35 " fill="none" id="yarc.compiler.handlers.handler.Handler-to-yarc.compiler.handlers.handler.Attribute" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="810,1414.35,814,1405.35,810,1409.35,806,1405.35,810,1414.35" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[4e18b674be7535010df4ac4aad5c73ab]
link yarc.compiler.handlers.handler.Handler to yarc.compiler.handlers.handler.Parameter--><g id="link_yarc.compiler.handlers.handler.Handler_yarc.compiler.handlers.handler.Parameter"><path codeLine="158" d="M937,1293.35 C937,1293.35 937,1418.47 937,1418.47 " fill="none" id="yarc.compiler.handlers.handler.Handler-to-yarc.compiler.handlers.handler.Parameter" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="937,1423.47,941,1414.47,937,1418.47,933,1414.47,937,1423.47" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[96445af94c51eb69ca8fea6906df855c]
link yarc.compiler.handlers.formatters.error_formatter.ErrorFormatter to yarc.compiler.handlers.handler.Handler--><g id="link_yarc.compiler.handlers.formatters.error_formatter.ErrorFormatter_yarc.compiler.handlers.handler.Handler"><path codeLine="160" d="M1146.75,499.55 C1146.75,499.55 1146.75,579.79 1146.75,579.79 " fill="none" id="yarc.compiler.handlers.formatters.error_formatter.ErrorFormatter-to-yarc.compiler.handlers.handler.Handler" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1146.75,592.79,1150.75,586.79,1146.75,580.79,1142.75,586.79,1146.75,592.79" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="84" x="1061.75" y="536.1651">error_formatter</text></g><!--MD5=[f347af07bf32a4e1342957bf7a73e5b2]
link yarc.compiler.handlers.formatters.warning_formatter.WarningFormatter to yarc.compiler.handlers.handler.Handler--><g id="link_yarc.compiler.handlers.formatters.warning_formatter.WarningFormatter_yarc.compiler.handlers.handler.Handler"><path codeLine="161" d="M874,490.69 C874,490.69 874,579.77 874,579.77 " fill="none" id="yarc.compiler.handlers.formatters.warning_formatter.WarningFormatter-to-yarc.compiler.handlers.handler.Handler" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="874,592.77,878,586.77,874,580.77,870,586.77,874,592.77" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="102" x="771" y="531.7251">warning_formatter</text></g><!--MD5=[4074b1f9947da5bf3176bd23697d1030]
link yarc.compiler.handlers.utils.symbol_stack.SymbolStack to yarc.compiler.handlers.handler.Handler--><g id="link_yarc.compiler.handlers.utils.symbol_stack.SymbolStack_yarc.compiler.handlers.handler.Handler"><path codeLine="162" d="M601.25,517.17 C601.25,517.17 601.25,579.87 601.25,579.87 " fill="none" id="yarc.compiler.handlers.utils.symbol_stack.SymbolStack-to-yarc.compiler.handlers.handler.Handler" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="601.25,592.87,605.25,586.87,601.25,580.87,597.25,586.87,601.25,592.87" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="81" x="519.25" y="545.0151">symbol_stack</text></g><!--MD5=[c82a77381228a9e6d1396d865a8488fa]
reverse link yarc.compiler.handlers.handler.Handler to yarc.compiler.handlers.handler_factory.HandlerFactory--><g id="link_yarc.compiler.handlers.handler.Handler_yarc.compiler.handlers.handler_factory.HandlerFactory"><path codeLine="164" d="M1159.52,943 C1159.52,943 1211,943 1211,943 " fill="none" id="yarc.compiler.handlers.handler.Handler-backto-yarc.compiler.handlers.handler_factory.HandlerFactory" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1154.52,943,1163.52,947,1159.52,943,1163.52,939,1154.52,943" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[4f8d02127189327f083c569985374f8d]
reverse link yarc.compiler.handlers.handler.Handler to yarc.compiler.handlers.replicator_handler.OmniReplicatorHandler--><g id="link_yarc.compiler.handlers.handler.Handler_yarc.compiler.handlers.replicator_handler.OmniReplicatorHandler"><path codeLine="166" d="M1070.25,1313.16 C1070.25,1313.16 1070.25,1384 1070.25,1384 C1070.25,1384 1133.82,1384 1211.48,1384 " fill="none" id="yarc.compiler.handlers.handler.Handler-backto-yarc.compiler.handlers.replicator_handler.OmniReplicatorHandler" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1063.25,1313.16,1070.25,1293.16,1077.25,1313.16,1063.25,1313.16" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[4a89f77170fa6aee10741d987eb299da]
link yarc.compiler.handlers.handler.Handler to yarc.compiler.YarcParserBase--><g id="link_yarc.compiler.handlers.handler.Handler_yarc.compiler.YarcParserBase"><path codeLine="168" d="M680.5,1293.35 C680.5,1388.11 680.5,1465 680.5,1465 C680.5,1465 549.76,1465 549.76,1465 " fill="none" id="yarc.compiler.handlers.handler.Handler-to-yarc.compiler.YarcParserBase" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="536.76,1465,542.76,1469,548.76,1465,542.76,1461,536.76,1465" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="56" x="623.5" y="1441.0451">__handler</text></g><!--MD5=[7406738fcf97132e5bf0494608602564]
@startuml yarc_classes
skinparam linetype polyline
skinparam linetype ortho
/' set namespaceSeparator none '/
class "Handler" as yarc.compiler.handlers.handler.Handler #antiquewhite {
  BEHAVIOR : str
  default_settings : dict
  error_dict : dict[str, str]
  error_formatter
  forward_references : list[tuple[str, Token]]
  overwritten_settings : set
  parser : Parser
  settings : dict[str, str]
  should_lookup : bool
  show_warnings : bool
  symbol_stack
  warning_dict : dict[str, str]
  warning_formatter
  add_setting(setting: Token, value: Any) -> None
  {abstract}check_target(tk: Token) -> None
  {abstract}check_writer(writer: Token, params: list[Parameter]) -> None
  define(vars: list[str]) -> None
  disable_lookup() -> None
  enable_lookup() -> None
  expand_string(s: Token | str) -> str
  {abstract}get_attrs(token: Token, attrs: list[Attribute] | None) -> list[str]
  {abstract}get_behaviors(attrs: list[Attribute] | None) -> list[str]
  {abstract}get_params(token: Token, attrs: list[Attribute] | None, warnings: bool) -> list[Parameter]
  get_random_uid() -> str
  handle_error(type: ErrorType, msg: Optional[str], tk: Optional[Token]) -> None
  handle_warning(type: WarningType, tk: Optional[Token]) -> None
  is_frame(type: Token) -> bool
  is_overwritten(setting: Token) -> bool
  is_special_setting(setting: Token) -> bool
  lookup(var: str, tk: Optional[Token]) -> None
  {abstract}map() -> str
  parse_setting_id(setting_id: Token) -> str
  {abstract}parse_snippet(snippet: Token) -> str
  pop_stack() -> None
  push_stack() -> None
  settings_to_str(indent: int) -> str
  special_setting_to_str(setting: Token | str, value: Any) -> Optional[str]
}
class "HandlerFactory" as yarc.compiler.handlers.handler_factory.HandlerFactory #antiquewhite {
  supported_libraries : dict[str, tuple[type[Handler], Path]]
  get_handler(parser: Parser, lib: str, handler_kwargs: Optional[dict[str, Any]]) -> Handler
  is_library_supported(lib)
}
class "Attribute" as yarc.compiler.handlers.handler.Attribute #antiquewhite {
  name : str
  st : str
  value
}
class "Parameter" as yarc.compiler.handlers.handler.Parameter #antiquewhite {
  name : str
  value
}
class "OmniReplicatorHandler" as yarc.compiler.handlers.replicator_handler.OmniReplicatorHandler #antiquewhite {
  carb_mapping : dict
  mapping
  check_target(tk: Token) -> None
  check_writer(writer: Token, params: list[Parameter]) -> None
  get_attrs(token: Token, attrs: list[Attribute] | None) -> list[str]
  get_behaviors(attrs: list[Attribute] | None) -> list[str]
  get_params(token: Token, attrs: list[Attribute] | None, warnings: bool) -> list[Parameter]
  map() -> str
  parse_snippet(snippet: Token) -> str
  special_setting_to_str(setting: Token | str, value: Any) -> Optional[str]
}
class "SymbolStack" as yarc.compiler.handlers.utils.symbol_stack.SymbolStack #antiquewhite {
  define(name: str, var_type: type, used: bool) -> None
  lookup(name: str) -> Optional[Variable]
  pop() -> SymbolTable
  push() -> None
  top() -> SymbolTable
}
class "SymbolTable" as yarc.compiler.handlers.utils.symbol_stack.SymbolTable #antiquewhite {
  parent : Optional['SymbolTable']
  symbols
  define(name: str, var_type: type, used: bool) -> None
  lookup(name: str) -> Optional[Variable]
}
class "Variable" as yarc.compiler.handlers.utils.symbol_stack.Variable #antiquewhite {
  name : str
  type_ : type
  used : bool
}
class "WarningFormatter" as yarc.compiler.handlers.formatters.warning_formatter.WarningFormatter #antiquewhite {
  closest_suggestion(name: str, accepted: set[str]) -> Optional[str]
  get_warning_message(type: WarningType) -> str
}
class "WarningType" as yarc.compiler.handlers.formatters.warning_formatter.WarningType #antiquewhite {
  name
}
class "ErrorFormatter" as yarc.compiler.handlers.formatters.error_formatter.ErrorFormatter #antiquewhite {
  input : ANTLRStringStream
  strdata : list[str]
  format(tk: Token, msg: str, show_anchors: bool) -> str
}
class "ErrorType" as yarc.compiler.handlers.formatters.error_formatter.ErrorType #antiquewhite {
  default_msg
  name
  type
}
class "<color:red>YARCException</color>" as yarc.compiler.handlers.exceptions.YARCException #antiquewhite {
  error_type
  message : NoneType
}

class "YarcLexerBase" as yarc.compiler.YarcLexerBase #antiquewhite {
  NEW_LINE_PATTERN
  SPACES_PATTERN
  indents : list[int], list
  opened : int
  tokens : list, list[Token]
  atStartOfInput()
  closeBrace()
  commonToken(type_: int, text: str) -> CommonToken
  createDedent()
  emit(token: Optional[Token]) -> Token
  emitToken(token: Token) -> None
  getIndentationCount(whitespace: str) -> int
  nextToken()
  onNewLine()
  openBrace()
  reset()
}
class "YarcLexer" as yarc.compiler.YarcLexer #antiquewhite {  
}
class "YarcParserBase" as yarc.compiler.YarcParserBase #antiquewhite {
  handler
  displayRecognitionError(e)
  set_handler(lib: str, handler_kwargs: dict[str, Any]) -> None
}
class "YarcParser" as yarc.compiler.YarcParser #antiquewhite {
}
class "YarcCompiler" as yarc.compiler.YarcCompiler #antiquewhite {
  errors
  handler_args : dict
  lib : Optional[str]
  parser
  warnings
  compile() -> str
}

yarc.compiler.YarcLexerBase <|- - yarc.compiler.YarcLexer
yarc.compiler.YarcParserBase <|- - yarc.compiler.YarcParser
yarc.compiler.YarcLexer - -* yarc.compiler.YarcParser: input
yarc.compiler.YarcParser - -* yarc.compiler.YarcCompiler : parser

yarc.compiler.handlers.utils.symbol_stack.SymbolTable <- - yarc.compiler.handlers.utils.symbol_stack.SymbolStack
yarc.compiler.handlers.utils.symbol_stack.Variable <- - yarc.compiler.handlers.utils.symbol_stack.SymbolTable
yarc.compiler.handlers.exceptions.YARCException o- - yarc.compiler.handlers.formatters.error_formatter.ErrorType : error_type

yarc.compiler.handlers.formatters.warning_formatter.WarningType <- - yarc.compiler.handlers.formatters.warning_formatter.WarningFormatter 
yarc.compiler.handlers.formatters.error_formatter.ErrorType <- - yarc.compiler.handlers.formatters.error_formatter.ErrorFormatter

yarc.compiler.handlers.handler.Handler - -> yarc.compiler.handlers.handler.Attribute
yarc.compiler.handlers.handler.Handler - -> yarc.compiler.handlers.handler.Parameter

yarc.compiler.handlers.formatters.error_formatter.ErrorFormatter - -* yarc.compiler.handlers.handler.Handler : error_formatter
yarc.compiler.handlers.formatters.warning_formatter.WarningFormatter - -* yarc.compiler.handlers.handler.Handler : warning_formatter
yarc.compiler.handlers.utils.symbol_stack.SymbolStack - -* yarc.compiler.handlers.handler.Handler : symbol_stack

yarc.compiler.handlers.handler.Handler <-r- yarc.compiler.handlers.handler_factory.HandlerFactory

yarc.compiler.handlers.handler.Handler <|- - yarc.compiler.handlers.replicator_handler.OmniReplicatorHandler

yarc.compiler.handlers.handler.Handler - -* yarc.compiler.YarcParserBase : __handler

@enduml

@startuml yarc_classes
skinparam linetype polyline
skinparam linetype ortho
class "Handler" as yarc.compiler.handlers.handler.Handler #antiquewhite {
  BEHAVIOR : str
  default_settings : dict
  error_dict : dict[str, str]
  error_formatter
  forward_references : list[tuple[str, Token]]
  overwritten_settings : set
  parser : Parser
  settings : dict[str, str]
  should_lookup : bool
  show_warnings : bool
  symbol_stack
  warning_dict : dict[str, str]
  warning_formatter
  add_setting(setting: Token, value: Any) -> None
  {abstract}check_target(tk: Token) -> None
  {abstract}check_writer(writer: Token, params: list[Parameter]) -> None
  define(vars: list[str]) -> None
  disable_lookup() -> None
  enable_lookup() -> None
  expand_string(s: Token | str) -> str
  {abstract}get_attrs(token: Token, attrs: list[Attribute] | None) -> list[str]
  {abstract}get_behaviors(attrs: list[Attribute] | None) -> list[str]
  {abstract}get_params(token: Token, attrs: list[Attribute] | None, warnings: bool) -> list[Parameter]
  get_random_uid() -> str
  handle_error(type: ErrorType, msg: Optional[str], tk: Optional[Token]) -> None
  handle_warning(type: WarningType, tk: Optional[Token]) -> None
  is_frame(type: Token) -> bool
  is_overwritten(setting: Token) -> bool
  is_special_setting(setting: Token) -> bool
  lookup(var: str, tk: Optional[Token]) -> None
  {abstract}map() -> str
  parse_setting_id(setting_id: Token) -> str
  {abstract}parse_snippet(snippet: Token) -> str
  pop_stack() -> None
  push_stack() -> None
  settings_to_str(indent: int) -> str
  special_setting_to_str(setting: Token | str, value: Any) -> Optional[str]
}
class "HandlerFactory" as yarc.compiler.handlers.handler_factory.HandlerFactory #antiquewhite {
  supported_libraries : dict[str, tuple[type[Handler], Path]]
  get_handler(parser: Parser, lib: str, handler_kwargs: Optional[dict[str, Any]]) -> Handler
  is_library_supported(lib)
}
class "Attribute" as yarc.compiler.handlers.handler.Attribute #antiquewhite {
  name : str
  st : str
  value
}
class "Parameter" as yarc.compiler.handlers.handler.Parameter #antiquewhite {
  name : str
  value
}
class "OmniReplicatorHandler" as yarc.compiler.handlers.replicator_handler.OmniReplicatorHandler #antiquewhite {
  carb_mapping : dict
  mapping
  check_target(tk: Token) -> None
  check_writer(writer: Token, params: list[Parameter]) -> None
  get_attrs(token: Token, attrs: list[Attribute] | None) -> list[str]
  get_behaviors(attrs: list[Attribute] | None) -> list[str]
  get_params(token: Token, attrs: list[Attribute] | None, warnings: bool) -> list[Parameter]
  map() -> str
  parse_snippet(snippet: Token) -> str
  special_setting_to_str(setting: Token | str, value: Any) -> Optional[str]
}
class "SymbolStack" as yarc.compiler.handlers.utils.symbol_stack.SymbolStack #antiquewhite {
  define(name: str, var_type: type, used: bool) -> None
  lookup(name: str) -> Optional[Variable]
  pop() -> SymbolTable
  push() -> None
  top() -> SymbolTable
}
class "SymbolTable" as yarc.compiler.handlers.utils.symbol_stack.SymbolTable #antiquewhite {
  parent : Optional['SymbolTable']
  symbols
  define(name: str, var_type: type, used: bool) -> None
  lookup(name: str) -> Optional[Variable]
}
class "Variable" as yarc.compiler.handlers.utils.symbol_stack.Variable #antiquewhite {
  name : str
  type_ : type
  used : bool
}
class "WarningFormatter" as yarc.compiler.handlers.formatters.warning_formatter.WarningFormatter #antiquewhite {
  closest_suggestion(name: str, accepted: set[str]) -> Optional[str]
  get_warning_message(type: WarningType) -> str
}
class "WarningType" as yarc.compiler.handlers.formatters.warning_formatter.WarningType #antiquewhite {
  name
}
class "ErrorFormatter" as yarc.compiler.handlers.formatters.error_formatter.ErrorFormatter #antiquewhite {
  input : ANTLRStringStream
  strdata : list[str]
  format(tk: Token, msg: str, show_anchors: bool) -> str
}
class "ErrorType" as yarc.compiler.handlers.formatters.error_formatter.ErrorType #antiquewhite {
  default_msg
  name
  type
}
class "<color:red>YARCException</color>" as yarc.compiler.handlers.exceptions.YARCException #antiquewhite {
  error_type
  message : NoneType
}

class "YarcLexerBase" as yarc.compiler.YarcLexerBase #antiquewhite {
  NEW_LINE_PATTERN
  SPACES_PATTERN
  indents : list[int], list
  opened : int
  tokens : list, list[Token]
  atStartOfInput()
  closeBrace()
  commonToken(type_: int, text: str) -> CommonToken
  createDedent()
  emit(token: Optional[Token]) -> Token
  emitToken(token: Token) -> None
  getIndentationCount(whitespace: str) -> int
  nextToken()
  onNewLine()
  openBrace()
  reset()
}
class "YarcLexer" as yarc.compiler.YarcLexer #antiquewhite {  
}
class "YarcParserBase" as yarc.compiler.YarcParserBase #antiquewhite {
  handler
  displayRecognitionError(e)
  set_handler(lib: str, handler_kwargs: dict[str, Any]) -> None
}
class "YarcParser" as yarc.compiler.YarcParser #antiquewhite {
}
class "YarcCompiler" as yarc.compiler.YarcCompiler #antiquewhite {
  errors
  handler_args : dict
  lib : Optional[str]
  parser
  warnings
  compile() -> str
}

yarc.compiler.YarcLexerBase <|- - yarc.compiler.YarcLexer
yarc.compiler.YarcParserBase <|- - yarc.compiler.YarcParser
yarc.compiler.YarcLexer - -* yarc.compiler.YarcParser: input
yarc.compiler.YarcParser - -* yarc.compiler.YarcCompiler : parser

yarc.compiler.handlers.utils.symbol_stack.SymbolTable <- - yarc.compiler.handlers.utils.symbol_stack.SymbolStack
yarc.compiler.handlers.utils.symbol_stack.Variable <- - yarc.compiler.handlers.utils.symbol_stack.SymbolTable
yarc.compiler.handlers.exceptions.YARCException o- - yarc.compiler.handlers.formatters.error_formatter.ErrorType : error_type

yarc.compiler.handlers.formatters.warning_formatter.WarningType <- - yarc.compiler.handlers.formatters.warning_formatter.WarningFormatter 
yarc.compiler.handlers.formatters.error_formatter.ErrorType <- - yarc.compiler.handlers.formatters.error_formatter.ErrorFormatter

yarc.compiler.handlers.handler.Handler - -> yarc.compiler.handlers.handler.Attribute
yarc.compiler.handlers.handler.Handler - -> yarc.compiler.handlers.handler.Parameter

yarc.compiler.handlers.formatters.error_formatter.ErrorFormatter - -* yarc.compiler.handlers.handler.Handler : error_formatter
yarc.compiler.handlers.formatters.warning_formatter.WarningFormatter - -* yarc.compiler.handlers.handler.Handler : warning_formatter
yarc.compiler.handlers.utils.symbol_stack.SymbolStack - -* yarc.compiler.handlers.handler.Handler : symbol_stack

yarc.compiler.handlers.handler.Handler <-r- yarc.compiler.handlers.handler_factory.HandlerFactory

yarc.compiler.handlers.handler.Handler <|- - yarc.compiler.handlers.replicator_handler.OmniReplicatorHandler

yarc.compiler.handlers.handler.Handler - -* yarc.compiler.YarcParserBase : __handler

@enduml

PlantUML version 1.2022.7(Mon Aug 22 19:01:30 CEST 2022)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: Cp1252
Language: it
Country: IT
--></g></svg>
